{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user's profile, containing personal information and preferences.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the UserProfile entity."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "profilePicUrl": {
          "type": "string",
          "description": "URL of the user's profile picture. Stored in Firebase Storage.",
          "format": "uri"
        },
        "currentSeason": {
          "type": "string",
          "description": "The user's current season of life, as determined during onboarding."
        },
        "constraints": {
          "type": "string",
          "description": "Constraints identified by the user during onboarding."
        },
        "values": {
          "type": "string",
          "description": "Values identified by the user during onboarding."
        },
        "strengths": {
          "type": "string",
          "description": "Strengths identified by the user during onboarding."
        },
        "interests": {
          "type": "string",
          "description": "Interests identified by the user during onboarding."
        },
        "timeBudget": {
          "type": "string",
          "description": "Time budget specified by the user during onboarding."
        },
        "startingPointSummary": {
          "type": "string",
          "description": "A personalized summary generated during onboarding, outlining the user's starting point."
        },
        "lifePurposeReportId": {
          "type": "string",
          "description": "Reference to LifePurposeReport. (Relationship: UserProfile 1:1 LifePurposeReport)"
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "LifePurposeReport": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LifePurposeReport",
      "type": "object",
      "description": "Stores the Life Purpose Report generated for a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the LifePurposeReport entity."
        },
        "enneagramType": {
          "type": "string",
          "description": "User's Enneagram type."
        },
        "wing": {
          "type": "string",
          "description": "User's Enneagram wing."
        },
        "instinctualStacking": {
          "type": "string",
          "description": "User's instinctual stacking."
        },
        "tritype": {
          "type": "string",
          "description": "User's tritype."
        },
        "naturalGenius": {
          "type": "string",
          "description": "Description of the user's natural genius, generated by AI."
        },
        "growthEdge": {
          "type": "string",
          "description": "Description of the user's growth edge, generated by AI."
        },
        "motivations": {
          "type": "string",
          "description": "Description of the user's motivations, generated by AI."
        },
        "coreValues": {
          "type": "string",
          "description": "List of the user's core values, generated by AI."
        },
        "reportPdfUrl": {
          "type": "string",
          "description": "URL to the PDF version of the Life Purpose Report, stored in Firebase Storage.",
          "format": "uri"
        },
        "reportAudioUrl": {
          "type": "string",
          "description": "URL to the audio version of the Life Purpose Report, stored in Firebase Storage.",
          "format": "uri"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}/userProfile",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores user profile information, including profile picture URL, onboarding data, and a reference to the LifePurposeReport. Path-based ownership ensures only the user can access their profile. Includes userId as a parameter to establish ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/lifePurposeReport",
        "definition": {
          "entityName": "LifePurposeReport",
          "schema": {
            "$ref": "#/backend/entities/LifePurposeReport"
          },
          "description": "Stores the Life Purpose Report generated for a user, including Enneagram type, natural genius, core values, and URLs to the report PDF and audio files. Path-based ownership ensures only the user can access their report. Includes userId as a parameter to establish ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to prioritize authorization independence and facilitate secure, scalable data management for the Heart Compass application. User profiles and life purpose reports are stored in separate collections under the user's ID, ensuring clear ownership and simplified security rules. Direct path-based ownership (`/users/{userId}/userProfile`) enhances security. The design avoids hierarchical authorization dependencies, allowing atomic operations and straightforward debugging. This structure supports the QAPs by segregating user data based on ownership, enabling secure list operations within a user's scope."
  }
}