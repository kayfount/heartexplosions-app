{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user's profile, containing personal information and preferences.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the UserProfile entity."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "profilePicUrl": {
          "type": "string",
          "description": "URL of the user's profile picture. Stored in Firebase Storage.",
          "format": "uri"
        },
        "currentSeason": {
          "type": "string",
          "description": "The user's current season of life, as determined during onboarding."
        },
        "constraints": {
          "type": "string",
          "description": "Constraints identified by the user during onboarding."
        },
        "values": {
          "type": "string",
          "description": "Values identified by the user during onboarding."
        },
        "strengths": {
          "type": "string",
          "description": "Strengths identified by the user during onboarding."
        },
        "interests": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeBudget": {
          "type": "string",
          "description": "Time budget specified by the user during onboarding."
        },
        "startingPointSummary": {
          "type": "string",
          "description": "A personalized summary generated during onboarding, outlining the user's starting point."
        },
        "lifePurposeReportId": {
          "type": "string",
          "description": "Reference to LifePurposeReport. (Relationship: UserProfile 1:1 LifePurposeReport)"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "callSign": {
          "type": "string"
        },
        "journeyStatus": {
          "type": "string"
        },
        "whyNow": {
          "type": "string"
        },
        "roleClarityScore": {
          "type": "number"
        },
        "enneagramType": {
          "type": "string"
        },
        "wing": {
          "type": "string"
        },
        "subtype": {
          "type": "string"
        },
        "instinctualStacking": {
          "type": "string"
        },
        "trifix": {
          "type": "string"
        },
        "focusArea": {
          "type": "string"
        },
        "availableHours": {
          "type": "number"
        },
        "commitments": {
          "type": "string"
        },
        "timeline": {
          "type": "string"
        },
        "coreValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "guideDownloaded": {
          "type": "boolean"
        },
        "playlistAdded": {
          "type": "boolean"
        },
        "driverCompleted": {
            "type": "boolean",
            "description": "Indicates if the user has completed The Driver stage."
        },
        "destinationCompleted": {
            "type": "boolean",
            "description": "Indicates if the user has completed The Destination stage."
        },
        "routeCompleted": {
            "type": "boolean",
            "description": "Indicates if the user has completed The Route stage."
        },
        "skills": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "passions": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "hobbies": {
            "type": "string"
        },
        "industrySectors": {
            "type": "string"
        },
        "energizingWork": {
            "type": "string"
        },
        "age": {
            "type": "number"
        },
        "desiredRetirementAge": {
            "type": "number"
        },
        "location": {
            "type": "string"
        },
        "preferredWorkLifeBalance": {
            "type": "string"
        },
        "longTermAspirations": {
            "type": "string"
        },
        "learningAndDevelopment": {
            "type": "string"
        },
        "dreamLife": {
            "type": "string"
        },
        "careerIdeas": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of career, calling, or contribution ideas brainstormed by the user or AI."
        },
        "dreamProjects": {
            "type": "string",
            "description": "The user's dream projects."
        },
        "lifetimeImpact": {
            "type": "string",
            "description": "The impact the user wants to have on others in their lifetime."
        },
        "timeLimits": {
            "type": "string"
        },
        "financialRunway": {
            "type": "string"
        },
        "workLifeIntegration": {
            "type": "string"
        },
        "fearsAndBlocks": {
            "type": "string"
        },
        "challengesAndConcerns": {
            "type": "string"
        },
        "toolsAndSupports": {
            "type": "string"
        },
        "willingnessToTry": {
          "type": "string"
        },
        "comfortWithUncertainty": {
          "type": "string"
        },
        "appetiteForRisk": {
          "type": "string"
        },
        "supportSystem": {
            "type": "string"
        },
        "additionalConsiderations": {
            "type": "string",
            "description": "Any other considerations for the user's transition path."
        }
      },
      "required": [
        "id",
        "email"
      ]
    },
    "LifePurposeReport": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "LifePurposeReport",
      "type": "object",
      "description": "Stores the Life Purpose Report generated for a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the LifePurposeReport entity."
        },
        "enneagramType": {
          "type": "string",
          "description": "User's Enneagram type."
        },
        "wing": {
          "type": "string",
          "description": "User's Enneagram wing."
        },
        "instinctualStacking": {
          "type": "string",
          "description": "User's instinctual stacking."
        },
        "tritype": {
          "type": "string",
          "description": "User's tritype."
        },
        "naturalGenius": {
          "type": "string",
          "description": "Description of the user's natural genius, generated by AI."
        },
        "growthEdge": {
          "type": "string",
          "description": "Description of the user's growth edge, generated by AI."
        },
        "motivations": {
          "type": "string",
          "description": "Description of the user's motivations, generated by AI."
        },
        "coreValues": {
          "type": "string",
          "description": "List of the user's core values, generated by AI."
        },
        "reportPdfUrl": {
          "type": "string",
          "description": "URL to the PDF version of the Life Purpose Report, stored in Firebase Storage.",
          "format": "uri"
        },
        "reportAudioUrl": {
          "type": "string",
          "description": "URL to the audio version of the Life Purpose Report, stored in Firebase Storage.",
          "format": "uri"
        },
        "report": {
          "type": "string",
          "description": "The full text content of the generated Life Purpose Report."
        }
      },
      "required": [
        "id",
        "report"
      ]
    },
    "Role": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Role",
      "type": "object",
      "description": "Represents a single role or experience in a user's life.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Role."
        },
        "roleTitle": {
          "type": "string",
          "description": "The title of the role."
        },
        "organizationContext": {
          "type": "string",
          "description": "The company, family, or context for the role."
        },
        "duration": {
          "type": "string",
          "description": "The duration of the role."
        },
        "keyResponsibilities": {
          "type": "string",
          "description": "The key responsibilities of the role."
        },
        "keyAccomplishments": {
          "type": "string",
          "description": "Key accomplishments in the role."
        },
        "whatILoved": {
          "type": "string",
          "description": "What the user loved about the role."
        },
        "whatIDisliked": {
          "type": "string",
          "description": "What the user disliked about the role."
        },
        "heartExplosionsLevel": {
          "type": "number",
          "description": "A 0-10 rating of alignment and passion for the role."
        }
      },
      "required": [
        "roleTitle",
        "organizationContext",
        "duration",
        "heartExplosionsLevel"
      ]
    },
    "satisfaction-quiz": {
      "title": "Satisfaction Quiz",
      "description": "Stores the user's satisfaction quiz results.",
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "The user's score on the satisfaction quiz."
        }
      }
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores user profile information, including profile picture URL, onboarding data, and a reference to the LifePurposeReport. Path-based ownership ensures only the user can access their profile. Includes userId as a parameter to establish ownership."
        }
      },
      {
        "path": "/users/{userId}/roles/{roleId}",
        "definition": {
            "entityName": "Role",
            "schema": {
                "$ref": "#/backend/entities/Role"
            },
            "description": "Stores individual roles and experiences for a specific user. This is a subcollection of the user's document."
        }
      },
      {
        "path": "/reports/{reportId}",
        "definition": {
            "entityName": "LifePurposeReport",
            "schema": {
                "$ref": "#/backend/entities/LifePurposeReport"
            },
            "description": "Stores generated reports for users. The `reportId` will often correspond to a user's UID for easy lookup, but this allows for multiple reports per user in the future."
        }
      }
    ]
  }
}
