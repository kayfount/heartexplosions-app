#!/bin/bash
# Helper script to configure Firebase service account credentials
# Usage: ./setup-service-account.sh path/to/your-service-account.json

if [ -z "$1" ]; then
    echo "‚ùå Error: Please provide the path to your service account JSON file"
    echo ""
    echo "Usage: ./setup-service-account.sh path/to/your-service-account.json"
    echo ""
    echo "Steps to get service account JSON:"
    echo "1. Go to https://console.firebase.google.com/"
    echo "2. Select your project: studio-3233859570-d7bfa"
    echo "3. Click ‚öôÔ∏è ‚Üí Project settings ‚Üí Service accounts"
    echo "4. Click 'Generate new private key'"
    echo "5. Download the JSON file"
    echo "6. Run: ./setup-service-account.sh path/to/downloaded-file.json"
    exit 1
fi

SERVICE_ACCOUNT_FILE=$1

if [ ! -f "$SERVICE_ACCOUNT_FILE" ]; then
    echo "‚ùå Error: File not found: $SERVICE_ACCOUNT_FILE"
    exit 1
fi

echo "üìã Processing service account file..."

# Minify JSON (remove whitespace and newlines)
MINIFIED_JSON=$(cat "$SERVICE_ACCOUNT_FILE" | jq -c .)

if [ -z "$MINIFIED_JSON" ]; then
    echo "‚ùå Error: Failed to parse JSON file. Please ensure it's valid JSON."
    exit 1
fi

# Check if FIREBASE_SERVICE_ACCOUNT_KEY already exists in .env
if grep -q "^FIREBASE_SERVICE_ACCOUNT_KEY=" .env; then
    echo "‚ö†Ô∏è  FIREBASE_SERVICE_ACCOUNT_KEY already exists in .env"
    echo "   Updating it..."
    # Use a different delimiter since the JSON contains forward slashes
    sed -i "s|^FIREBASE_SERVICE_ACCOUNT_KEY=.*|FIREBASE_SERVICE_ACCOUNT_KEY='${MINIFIED_JSON}'|" .env
else
    echo "‚ûï Adding FIREBASE_SERVICE_ACCOUNT_KEY to .env"
    echo "" >> .env
    echo "# Firebase Service Account (Generated by setup script)" >> .env
    echo "FIREBASE_SERVICE_ACCOUNT_KEY='${MINIFIED_JSON}'" >> .env
fi

echo ""
echo "‚úÖ Success! Service account credentials configured."
echo ""
echo "‚ö†Ô∏è  IMPORTANT SECURITY NOTES:"
echo "   1. The .env file now contains sensitive credentials"
echo "   2. NEVER commit .env to git (it should be in .gitignore)"
echo "   3. For production, set this as an environment variable in your hosting platform"
echo ""
echo "Next steps:"
echo "   1. Restart your development server: npm run dev"
echo "   2. Test the app - it should work without OAuth popups"
echo ""
